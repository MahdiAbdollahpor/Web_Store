    @using Web_Store.Application.Services.Products.Queries.GetProductForAdmin
@model ProductForAdminDto
@{
    ViewData["Title"] = "مدیریت محصولات";
    Layout = "~/Areas/Admin/Views/Shared/_Adminlayout.cshtml";
}

<div class="card">
    <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center">
        <h3 class="card-title mb-2 mb-md-0">لیست محصولات</h3>
        <div class="card-tools d-flex flex-wrap gap-2">
            <a href="~/admin/products/deletedproducts" class="btn btn-warning btn-sm">
                <i class="fa fa-trash"></i> <span class="d-none d-md-inline">محصولات حذف شده</span>
            </a>
            <a href="~/admin/products/AddNewProduct" class="btn btn-primary btn-sm">
                <i class="fa fa-plus"></i> <span class="d-none d-md-inline">افزودن محصول جدید</span>
            </a>
        </div>
    </div>
    <div class="card-body">
        <!-- نمایش پیام موفقیت -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th width="40" class="text-center">
                            <input type="checkbox" id="selectAll" />
                        </th>
                        <th>نام محصول</th>
                        <th class="min-tablet">دسته‌بندی</th>
                        <th class="min-tablet">قیمت</th>
                        <th class="min-mobile">موجودی</th>
                        <th>وضعیت</th>
                        <th width="180" class="text-center">عملیات</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model.Products)
                    {
                        <tr data-product-id="@product.Id">
                            <td class="text-center">
                                <input type="checkbox" class="product-checkbox" value="@product.Id" />
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <span class="font-weight-bold">@product.Name</span>
                                </div>
                            </td>
                            <td class="min-tablet">@product.Category</td>
                            <td class="min-tablet">
                                <span class="text-success font-weight-bold">@product.Price.ToString("n0")</span>
                                <small class="text-muted d-block d-md-none">تومان</small>
                            </td>
                            <td class="min-mobile">
                                <span class="badge @(product.Inventory > 0 ? "badge-success" : "badge-danger")">
                                    @product.Inventory
                                </span>
                            </td>
                            <td>
                                @if (product.Displayed)
                                {
                                    <span class="badge badge-success">
                                        <i class="fa fa-check d-none d-md-inline"></i> فعال
                                    </span>
                                }
                                else
                                {
                                    <span class="badge badge-danger">
                                        <i class="fa fa-times d-none d-md-inline"></i> غیرفعال
                                    </span>
                                }
                            </td>
                            <td>
                                <div class="btn-group-vertical btn-group-sm d-md-flex flex-md-row justify-content-center" role="group">
                                    <a href="~/admin/products/detail/@product.Id"
                                       class="btn btn-info btn-sm mb-1 mb-md-0 me-md-1"
                                       title="جزئیات">
                                        <i class="fa fa-eye"></i>
                                        <span class="d-none d-md-inline">مشاهده</span>
                                    </a>
                                    <a href="~/admin/products/EditProduct/@product.Id"
                                       class="btn btn-warning btn-sm mb-1 mb-md-0 me-md-1"
                                       title="ویرایش">
                                        <i class="fa fa-edit"></i>
                                        <span class="d-none d-md-inline">ویرایش</span>
                                    </a>
                                    <button class="btn btn-danger btn-sm delete-single"
                                            data-id="@product.Id"
                                            data-name="@product.Name"
                                            title="حذف">
                                        <i class="fa fa-trash"></i>
                                        <span class="d-none d-md-inline">حذف</span>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- دکمه حذف گروهی -->
        <div class="mt-3 text-center text-md-start">
            <button id="deleteSelected" class="btn btn-danger btn-sm" disabled>
                <i class="fa fa-trash"></i>
                <span class="d-none d-md-inline">حذف محصولات انتخاب شده</span>
                <span class="d-md-none">حذف انتخاب شده‌ها</span>
            </button>
        </div>

        <!-- صفحه‌بندی -->
        @if (Model.RowCount > Model.PageSize)
        {
            <nav aria-label="Page navigation" class="mt-3">
                <ul class="pagination justify-content-center flex-wrap">
                    @for (int i = 1; i <= (Model.RowCount + Model.PageSize - 1) / Model.PageSize; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { Page = i, PageSize = Model.PageSize })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // تابع بازیابی محصول
            function restoreProduct(productId, productName) {
                Swal.fire({
                    title: 'آیا مطمئن هستید؟',
                    html: `آیا از بازیابی محصول "<strong>${productName}</strong>" اطمینان دارید؟`,
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'بله، بازیابی شود',
                    cancelButtonText: 'انصراف',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'لطفا منتظر بمانید...',
                            text: 'در حال بازیابی محصول',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        $.ajax({
                            url: '/admin/products/RestoreProduct',
                            type: 'POST',
                            data: { id: productId },
                            success: function (result) {
                                Swal.close();

                                if (result.isSuccess) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'موفق',
                                        text: result.message,
                                        confirmButtonText: 'باشه',
                                        timer: 2000,
                                        timerProgressBar: true
                                    }).then(() => {
                                        window.location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'خطا',
                                        text: result.message,
                                        confirmButtonText: 'متوجه شدم'
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                Swal.close();
                                Swal.fire({
                                    icon: 'error',
                                    title: 'خطا',
                                    text: 'خطا در ارتباط با سرور',
                                    confirmButtonText: 'متوجه شدم'
                                });
                            }
                        });
                    }
                });
            }

            // انتخاب همه/عدم انتخاب همه
            $('#selectAll').change(function () {
                $('.product-checkbox').prop('checked', this.checked);
                toggleDeleteButton();
            });

            // تغییر وضعیت دکمه حذف گروهی
            $('.product-checkbox').change(function () {
                toggleDeleteButton();
                $('#selectAll').prop('checked',
                    $('.product-checkbox:checked').length === $('.product-checkbox').length);
            });

            function toggleDeleteButton() {
                const checkedCount = $('.product-checkbox:checked').length;
                $('#deleteSelected').prop('disabled', checkedCount === 0);
                if (checkedCount > 0) {
                    $('#deleteSelected').html(`<i class="fa fa-trash"></i> حذف ${checkedCount} محصول انتخاب شده`);
                } else {
                    $('#deleteSelected').html('<i class="fa fa-trash"></i> حذف محصولات انتخاب شده');
                }
            }

            // حذف تک محصول
            $('.delete-single').click(function () {
                const productId = $(this).data('id');
                const productName = $(this).data('name');

                Swal.fire({
                    title: 'آیا مطمئن هستید؟',
                    html: `آیا از حذف محصول "<strong>${productName}</strong>" اطمینان دارید؟<br><small>این عمل قابل بازگشت نیست.</small>`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'بله، حذف شود',
                    cancelButtonText: 'انصراف',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteProduct(productId, false);
                    }
                });
            });

            // حذف گروهی
            $('#deleteSelected').click(function () {
                const selectedIds = [];
                $('.product-checkbox:checked').each(function () {
                    selectedIds.push($(this).val());
                });

                if (selectedIds.length > 0) {
                    Swal.fire({
                        title: 'آیا مطمئن هستید؟',
                        html: `آیا از حذف <strong>${selectedIds.length} محصول</strong> انتخاب شده اطمینان دارید؟<br><small>این عمل قابل بازگشت نیست.</small>`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: `بله، حذف ${selectedIds.length} محصول`,
                        cancelButtonText: 'انصراف',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            deleteProducts(selectedIds);
                        }
                    });
                }
            });

            // تابع حذف تک محصول
            function deleteProduct(productId, isMultiple = false) {
                Swal.fire({
                    title: 'لطفا منتظر بمانید...',
                    text: 'در حال حذف محصول',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                $.ajax({
                    url: '/admin/products/deleteproduct',
                    type: 'POST',
                    data: { id: productId },
                    success: function (result) {
                        Swal.close();

                        if (result.isSuccess) {
                            Swal.fire({
                                icon: 'success',
                                title: 'موفق',
                                text: result.message,
                                confirmButtonText: 'باشه',
                                timer: 2000,
                                timerProgressBar: true
                            }).then(() => {
                                // رفرش صفحه
                                window.location.href = '/admin/products/index';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'خطا',
                                text: result.message,
                                confirmButtonText: 'متوجه شدم'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.close();
                        Swal.fire({
                            icon: 'error',
                            title: 'خطا',
                            text: 'خطا در ارتباط با سرور: ' + error,
                            confirmButtonText: 'متوجه شدم'
                        });
                    }
                });
            }

            // تابع حذف گروهی محصولات
            function deleteProducts(productIds) {
                Swal.fire({
                    title: 'لطفا منتظر بمانید...',
                    html: `در حال حذف ${productIds.length} محصول`,
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                $.ajax({
                    url: '/admin/products/deletemultipleproducts',
                    type: 'POST',
                    data: { productIds: productIds },
                    traditional: true,
                    success: function (result) {
                        Swal.close();

                        if (result.isSuccess) {
                            Swal.fire({
                                icon: 'success',
                                title: 'موفق',
                                html: result.message,
                                confirmButtonText: 'باشه',
                                timer: 2500,
                                timerProgressBar: true
                            }).then(() => {
                                // رفرش صفحه
                                window.location.href = '/admin/products/index';
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'خطا',
                                text: result.message,
                                confirmButtonText: 'متوجه شدم'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.close();
                        Swal.fire({
                            icon: 'error',
                            title: 'خطا',
                            text: 'خطا در ارتباط با سرور: ' + error,
                            confirmButtonText: 'متوجه شدم'
                        });
                    }
                });
            }

            // نمایش تأیید حذف برای لینک‌ها (جلوگیری از ارسال فرم با Enter)
            $(document).on('keypress', function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                    return false;
                }
            });

            // hover effect برای دکمه‌ها
            $('.delete-single').hover(
                function () {
                    $(this).addClass('shadow');
                },
                function () {
                    $(this).removeClass('shadow');
                }
            );
        });
    </script>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        @@media (max-width: 768px) {
            .min-tablet {
                display: none;
            }

            .table-responsive {
                border: 1px solid #dee2e6;
                font-size: 0.9rem;
            }

            .btn-group-vertical {
                width: 100%;
            }

                .btn-group-vertical .btn {
                    width: 100%;
                    margin-bottom: 5px;
                    font-size: 0.8rem;
                    padding: 0.25rem 0.5rem;
                }

            .card-header {
                padding: 1rem;
            }

            .card-title {
                font-size: 1.1rem;
            }

            .badge {
                font-size: 0.75rem;
            }
        }

        @@media (max-width: 576px) {
            .min-mobile {
                display: none;
            }

            .table td, .table th {
                padding: 0.5rem;
            }

            .btn-sm {
                padding: 0.2rem 0.4rem;
                font-size: 0.75rem;
            }

            .pagination {
                font-size: 0.9rem;
            }

            .page-link {
                padding: 0.375rem 0.5rem;
            }
        }

        @@media (max-width: 400px) {
            .table td, .table th {
                padding: 0.3rem;
                font-size: 0.8rem;
            }

            .btn {
                font-size: 0.7rem;
            }

            .badge {
                font-size: 0.7rem;
            }
        }

        /* استایل برای نمایش بهتر در موبایل */
        @@media (max-width: 768px) {
            .table tbody tr {
                border-bottom: 2px solid #dee2e6;
            }

            .table tbody td {
                vertical-align: middle;
            }

            .product-checkbox {
                transform: scale(1.2);
            }
        }
    </style>
}